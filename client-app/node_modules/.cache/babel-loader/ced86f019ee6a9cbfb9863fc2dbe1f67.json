{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityDashboard.tsx\";\nimport React, { useContext } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityDetails from \"./../details/ActivityDetails\";\nimport ActivityForm from \"./../form/ActivityForm\";\nimport { observer } from 'mobx-react-lite';\nimport ActivityStore from '../../../app/stores/activityStore';\n\nconst ActivityDashboard = () => {\n  const activityStore = useContext(ActivityStore);\n  const activities = activityStore.activities,\n        editMode = activityStore.editMode,\n        selectedActivity = activityStore.selectedActivity,\n        selectActivity = activityStore.selectActivity;\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(ActivityList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, selectedActivity && !editMode && React.createElement(ActivityDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), editMode && React.createElement(ActivityForm, {\n    key: selectedActivity && selectedActivity.id || 0 //5.067 - bc it will cause component to reinitialize when you click Edit & createActivity\n    ,\n    activity: selectedActivity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \" \"));\n};\n\nexport default observer(ActivityDashboard);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/dashboard/ActivityDashboard.tsx"],"names":["React","useContext","Grid","ActivityList","ActivityDetails","ActivityForm","observer","ActivityStore","ActivityDashboard","activityStore","activities","editMode","selectedActivity","selectActivity","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgCC,UAAhC,QAAkD,OAAlD;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAEA,MAAMC,iBAA2B,GAAG,MAAM;AACxC,QAAMC,aAAa,GAAGR,UAAU,CAACM,aAAD,CAAhC;AADwC,QAEjCG,UAFiC,GAEyBD,aAFzB,CAEjCC,UAFiC;AAAA,QAErBC,QAFqB,GAEyBF,aAFzB,CAErBE,QAFqB;AAAA,QAEXC,gBAFW,GAEyBH,aAFzB,CAEXG,gBAFW;AAAA,QAEOC,cAFP,GAEyBJ,aAFzB,CAEOI,cAFP;AAIxC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,gBAAgB,IAAI,CAACD,QAArB,IACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKGA,QAAQ,IACP,oBAAC,YAAD;AACE,IAAA,GAAG,EAAGC,gBAAgB,IAAIA,gBAAgB,CAACE,EAAtC,IAA6C,CADpD,CACuD;AADvD;AAEE,IAAA,QAAQ,EAAEF,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAUK,GAVL,CAJF,CADF;AAoBD,CAxBD;;AA0BA,eAAeN,QAAQ,CAACE,iBAAD,CAAvB","sourcesContent":["import React, { SyntheticEvent, useContext } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityDetails from \"./../details/ActivityDetails\";\r\nimport ActivityForm from \"./../form/ActivityForm\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityStore from '../../../app/stores/activityStore'\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {activities, editMode, selectedActivity, selectActivity} = activityStore;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityList />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        {/* && - everything to the right only display if it is not null*/}\r\n        {selectedActivity && !editMode && (\r\n          <ActivityDetails />\r\n        )}\r\n        {editMode && (\r\n          <ActivityForm\r\n            key={(selectedActivity && selectedActivity.id) || 0} //5.067 - bc it will cause component to reinitialize when you click Edit & createActivity\r\n            activity={selectedActivity!}\r\n          />\r\n        )}{\" \"}\r\n        {/* 5.064 - add ! instead of union type null */}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n"]},"metadata":{},"sourceType":"module"}