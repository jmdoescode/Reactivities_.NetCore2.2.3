{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityList.tsx\";\nimport React from \"react\";\nimport { Item, Button, Label, Segment } from \"semantic-ui-react\";\n\nconst ActivityList = ({\n  activities,\n  selectActivity,\n  deleteActivity,\n  submitting\n}) => {\n  return React.createElement(Segment, {\n    clearing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    divided: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, activities.map(activity => React.createElement(Item, {\n    key: activity.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Item.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Item.Header, {\n    as: \"a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, activity.title), React.createElement(Item.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, activity.date), React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, activity.description), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, activity.city, \", \", activity.venue)), React.createElement(Item.Extra, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => selectActivity(activity.id),\n    floated: \"right\",\n    content: \"View\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => deleteActivity(activity.id),\n    floated: \"right\",\n    content: \"Delete\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Label, {\n    basic: true,\n    content: activity.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })))))));\n};\n\nexport default ActivityList;","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/dashboard/ActivityList.tsx"],"names":["React","Item","Button","Label","Segment","ActivityList","activities","selectActivity","deleteActivity","submitting","map","activity","id","title","date","description","city","venue","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;;AAUA,MAAMC,YAA8B,GAAG,CAAC;AACtCC,EAAAA,UADsC;AAEtCC,EAAAA,cAFsC;AAGtCC,EAAAA,cAHsC;AAItCC,EAAAA;AAJsC,CAAD,KAKjC;AACJ,SACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,CAACI,GAAX,CAAeC,QAAQ,IACtB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,QAAQ,CAACE,KAA9B,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,QAAQ,CAACG,IAArB,CAFF,EAGE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,QAAQ,CAACI,WAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACK,IADZ,QACoBL,QAAQ,CAACM,KAD7B,CAFF,CAHF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMV,cAAc,CAACI,QAAQ,CAACC,EAAV,CAD/B;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMJ,cAAc,CAACG,QAAQ,CAACC,EAAV,CAD/B;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,KAAK,EAAC,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,OAAO,EAAED,QAAQ,CAACO,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CATF,CADF,CADD,CADH,CADF,CADF;AAmCD,CAzCD;;AA2CA,eAAeb,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Item, Button, Label, Segment } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n  activities: IActivity[];\r\n  selectActivity: (id: string) => void;\r\n  deleteActivity: (id: string) => void;\r\n  submitting: boolean;\r\n}\r\n\r\nconst ActivityList: React.FC<IProps> = ({\r\n  activities,\r\n  selectActivity,\r\n  deleteActivity,\r\n  submitting\r\n}) => {\r\n  return (\r\n    <Segment clearing>\r\n      <Item.Group divided>\r\n        {activities.map(activity => (\r\n          <Item key={activity.id}>\r\n            <Item.Content>\r\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\r\n              <Item.Meta>{activity.date}</Item.Meta>\r\n              <Item.Description>\r\n                <div>{activity.description}</div>\r\n                <div>\r\n                  {activity.city}, {activity.venue}\r\n                </div>\r\n              </Item.Description>\r\n              <Item.Extra>\r\n                <Button\r\n                  onClick={() => selectActivity(activity.id)}\r\n                  floated=\"right\"\r\n                  content=\"View\"\r\n                  color=\"blue\"\r\n                />\r\n                <Button\r\n                  onClick={() => deleteActivity(activity.id)}\r\n                  floated=\"right\"\r\n                  content=\"Delete\"\r\n                  color=\"red\"\r\n                />\r\n                <Label basic content={activity.category} />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default ActivityList;\r\n"]},"metadata":{},"sourceType":"module"}