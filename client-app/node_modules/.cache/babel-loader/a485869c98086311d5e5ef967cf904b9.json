{"ast":null,"code":"import _defineProperty from \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\form\\\\ActivityForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Segment, Form, Button } from 'semantic-ui-react';\n\nconst ActivityForm = ({\n  setEditMode,\n  activity: initialFormState\n}) => {\n  const initializeForm = () => {\n    if (initialFormState) {\n      return initialFormState;\n    } else {\n      return {\n        id: '',\n        title: '',\n        category: '',\n        description: '',\n        date: '',\n        city: '',\n        venue: ''\n      };\n    }\n  };\n\n  const _useState = useState(initializeForm),\n        _useState2 = _slicedToArray(_useState, 2),\n        activity = _useState2[0],\n        setActivity = _useState2[1]; //5.065 - event: from onChange handler from our input\n\n\n  const handleInputChange = event => {\n    console.log(event.target.value);\n    setActivity(_objectSpread({}, activity, {\n      title: event.target.value\n    }));\n  };\n\n  return React.createElement(Segment, {\n    clearing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Title\",\n    value: activity.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Form.TextArea, {\n    rows: 2,\n    placeholder: \"Descripton\",\n    value: activity.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    placeholder: \"Category\",\n    value: activity.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    type: \"date\",\n    placeholder: \"Date\",\n    value: activity.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    placeholder: \"City\",\n    value: activity.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    placeholder: \"Venue\",\n    value: activity.venue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Button, {\n    floated: \"right\",\n    positive: true,\n    type: \"submit\",\n    content: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setEditMode(false),\n    floated: \"right\",\n    type: \"button\",\n    content: \"Cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n};\n\nexport default ActivityForm;","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/form/ActivityForm.tsx"],"names":["React","useState","Segment","Form","Button","ActivityForm","setEditMode","activity","initialFormState","initializeForm","id","title","category","description","date","city","venue","setActivity","handleInputChange","event","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Segment, Form, Button } from 'semantic-ui-react';\r\nimport { IActivity } from './../../../app/models/activity';\r\n\r\ninterface IProps{\r\n    setEditMode: (editMode: boolean) => void;\r\n    activity: IActivity;\r\n}\r\n\r\nconst ActivityForm: React.FC<IProps> = ({setEditMode, activity: initialFormState}) => {\r\n\r\n    const initializeForm = () => {\r\n        if (initialFormState) {\r\n            return initialFormState;\r\n        } else {\r\n            return {\r\n                id: '',\r\n                title: '',\r\n                category: '',\r\n                description: '',\r\n                date: '',\r\n                city: '',\r\n                venue: ''\r\n            };\r\n        }\r\n    };\r\n\r\n    const [activity, setActivity] = useState<IActivity>(initializeForm);\r\n\r\n    //5.065 - event: from onChange handler from our input\r\n    const handleInputChange = (event: any) => {\r\n        console.log(event.target.value);\r\n        setActivity({...activity, title: event.target.value})\r\n    }\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Form>\r\n                <Form.Input onChange={handleInputChange} name='title' placeholder='Title' value={activity.title} />\r\n                <Form.TextArea rows={2} placeholder='Descripton' value={activity.description} />\r\n                <Form.Input placeholder='Category' value={activity.category} />\r\n                <Form.Input type='date' placeholder='Date' value={activity.date} />\r\n                <Form.Input placeholder='City' value={activity.city} />\r\n                <Form.Input placeholder='Venue' value={activity.venue} />\r\n                <Button floated='right' positive type='submit' content='Submit' />\r\n                <Button onClick={() => setEditMode(false)} floated='right' type='button' content='Cancel' />\r\n            </Form>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default ActivityForm\r\n"]},"metadata":{},"sourceType":"module"}