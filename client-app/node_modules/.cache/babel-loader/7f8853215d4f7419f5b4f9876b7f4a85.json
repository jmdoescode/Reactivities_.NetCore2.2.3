{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\app\\\\layout\\\\App.tsx\";\nimport React, { useEffect, Fragment, useContext } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport LoadingComponent from './LoadingComponent';\nimport ActivityStore from './../stores/activityStore';\nimport { observer } from 'mobx-react-lite';\n\nconst App = () => {\n  const activityStore = useContext(ActivityStore);\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]); //5.054 - empty array ensures that useEffect will run 1 time only - every time this component renders the useEffect method will be called\n  //7.082 - in the same empty array in 5.054 - specify activity store\n\n  if (activityStore.loadingInitial) return React.createElement(LoadingComponent, {\n    content: \"Loading activities...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Container, {\n    style: {\n      marginTop: \"7em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ActivityDashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n};\n\nexport default observer(App); //7.082 - need to make App an observer of activites","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/app/layout/App.tsx"],"names":["React","useEffect","Fragment","useContext","Container","NavBar","ActivityDashboard","LoadingComponent","ActivityStore","observer","App","activityStore","loadActivities","loadingInitial","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,aAAa,GAAGR,UAAU,CAACK,aAAD,CAAhC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa,CAACC,cAAd;AACD,GAFQ,EAEN,CAACD,aAAD,CAFM,CAAT,CAHgB,CAMd;AACA;;AAEF,MAAIA,aAAa,CAACE,cAAlB,EAAkC,OAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAElC,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD,CAnBD;;AAqBA,eAAeL,QAAQ,CAACC,GAAD,CAAvB,C,CAA8B","sourcesContent":["import React, { useEffect, Fragment, useContext } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./../../features/nav/NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ActivityStore from './../stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst App = () => {\r\n  const activityStore = useContext(ActivityStore);\r\n\r\n  useEffect(() => {\r\n    activityStore.loadActivities();\r\n  }, [activityStore]);\r\n    //5.054 - empty array ensures that useEffect will run 1 time only - every time this component renders the useEffect method will be called\r\n    //7.082 - in the same empty array in 5.054 - specify activity store\r\n\r\n  if (activityStore.loadingInitial) return <LoadingComponent content='Loading activities...' />\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavBar />\r\n      <Container style={{ marginTop: \"7em\" }}>\r\n        <ActivityDashboard />\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(App); //7.082 - need to make App an observer of activites\r\n"]},"metadata":{},"sourceType":"module"}