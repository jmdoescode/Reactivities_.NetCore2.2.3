{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\details\\\\ActivityDetails.tsx\";\nimport { useContext } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport ActivityStore from '../../../app/stores/activityStore';\nimport { observer } from 'mobx-react-lite';\n\nconst ActivityDetails = ({\n  match\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const activity = activityStore.activity,\n        openEditForm = activityStore.openEditForm,\n        cancelSelectedActivity = activityStore.cancelSelectedActivity,\n        loadActivity = activityStore.loadActivity;\n  useEffect(() => {\n    loadActivity(match.params.id);\n  });\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Activity Details\");\n  return React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"/assets/categoryImages/\".concat(activity.category, \".jpg\"),\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, activity.title), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, activity.date)), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, activity.description)), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Button.Group, {\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => openEditForm(activity.id),\n    basic: true,\n    color: \"blue\",\n    content: \"Edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: cancelSelectedActivity,\n    basic: true,\n    color: \"grey\",\n    content: \"Cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }))));\n};\n\nexport default observer(ActivityDetails);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/details/ActivityDetails.tsx"],"names":["useContext","Card","Image","Button","ActivityStore","observer","ActivityDetails","match","activityStore","activity","openEditForm","cancelSelectedActivity","loadActivity","useEffect","params","id","category","title","date","description"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAOA,MAAMC,eAA4D,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAChF,QAAMC,aAAa,GAAGR,UAAU,CAACI,aAAD,CAAhC;AADgF,QAEzEK,QAFyE,GAETD,aAFS,CAEzEC,QAFyE;AAAA,QAE/DC,YAF+D,GAETF,aAFS,CAE/DE,YAF+D;AAAA,QAEjDC,sBAFiD,GAETH,aAFS,CAEjDG,sBAFiD;AAAA,QAEzBC,YAFyB,GAETJ,aAFS,CAEzBI,YAFyB;AAIhFC,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,YAAY,CAACL,KAAK,CAACO,MAAN,CAAaC,EAAd,CAAZ;AACD,GAFQ,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,GAAG,mCAA4BN,QAAQ,CAAEO,QAAtC,SADL;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,EAAE,EAAE,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcP,QAAQ,CAAEQ,KAAxB,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,QAAQ,CAAES,IAAjB,CADF,CAFF,EAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBT,QAAQ,CAAEU,WAA7B,CALF,CANF,EAaE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,MAAM,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMT,YAAY,CAACD,QAAQ,CAAEM,EAAX,CAD7B;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEJ,sBADX;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAC,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CAbF,CADF;AAiCD,CA3CD;;AA6CA,eAAeN,QAAQ,CAACC,eAAD,CAAvB","sourcesContent":["import { useContext } from \"react\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\n\r\ninterface DetailParams {\r\n  id: string\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({match}) => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {activity, openEditForm, cancelSelectedActivity, loadActivity} = activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id)\r\n  });\r\n\r\n  return <h1>Activity Details</h1>\r\n\r\n  return (\r\n    <Card fluid>\r\n      <Image\r\n        src={`/assets/categoryImages/${activity!.category}.jpg`}\r\n        wrapped\r\n        ui={false}\r\n      />\r\n      <Card.Content>\r\n        <Card.Header>{activity!.title}</Card.Header>\r\n        <Card.Meta>\r\n          <span>{activity!.date}</span>\r\n        </Card.Meta>\r\n        <Card.Description>{activity!.description}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button.Group widths={2}>\r\n          {/* width of 2 to represent there are 2 buttons */}\r\n          <Button\r\n            onClick={() => openEditForm(activity!.id)}\r\n            basic\r\n            color=\"blue\"\r\n            content=\"Edit\"\r\n          />\r\n          <Button\r\n            onClick={cancelSelectedActivity}\r\n            basic\r\n            color=\"grey\"\r\n            content=\"Cancel\"\r\n          />\r\n        </Button.Group>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n"]},"metadata":{},"sourceType":"module"}