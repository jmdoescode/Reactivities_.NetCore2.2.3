{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\details\\\\ActivityDetails.tsx\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport ActivityStore from \"../../../app/stores/activityStore\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\n\nconst ActivityDetails = ({\n  match,\n  history\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const activity = activityStore.activity,\n        openEditForm = activityStore.openEditForm,\n        loadActivity = activityStore.loadActivity,\n        loadingInitial = activityStore.loadingInitial;\n  useEffect(() => {\n    loadActivity(match.params.id);\n  }, [loadActivity, match.params.id]);\n  if (loadingInitial || !activity) return React.createElement(LoadingComponent, {\n    content: \"Loading activity...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n  return React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"/assets/categoryImages/\".concat(activity.category, \".jpg\"),\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, activity.title), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, activity.date)), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, activity.description)), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Button.Group, {\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Button, {\n    as: Link,\n    to: \"/manage/\".concat(activity.id),\n    basic: true,\n    color: \"blue\",\n    content: \"Edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => history.push('/activities'),\n    basic: true,\n    color: \"grey\",\n    content: \"Cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nexport default observer(ActivityDetails);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/details/ActivityDetails.tsx"],"names":["React","useContext","useEffect","Card","Image","Button","ActivityStore","observer","Link","LoadingComponent","ActivityDetails","match","history","activityStore","activity","openEditForm","loadActivity","loadingInitial","params","id","category","title","date","description","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,QAA0C,kBAA1C;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;;AAMA,MAAMC,eAA4D,GAAG,CAAC;AACpEC,EAAAA,KADoE;AAEpEC,EAAAA;AAFoE,CAAD,KAG/D;AACJ,QAAMC,aAAa,GAAGZ,UAAU,CAACK,aAAD,CAAhC;AADI,QAGFQ,QAHE,GAOAD,aAPA,CAGFC,QAHE;AAAA,QAIFC,YAJE,GAOAF,aAPA,CAIFE,YAJE;AAAA,QAKFC,YALE,GAOAH,aAPA,CAKFG,YALE;AAAA,QAMFC,cANE,GAOAJ,aAPA,CAMFI,cANE;AASJf,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAACL,KAAK,CAACO,MAAN,CAAaC,EAAd,CAAZ;AACD,GAFQ,EAEN,CAACH,YAAD,EAAeL,KAAK,CAACO,MAAN,CAAaC,EAA5B,CAFM,CAAT;AAIA,MAAGF,cAAc,IAAI,CAACH,QAAtB,EAAgC,OAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,qBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,GAAG,mCAA4BA,QAAQ,CAAEM,QAAtC,SADL;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,EAAE,EAAE,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcN,QAAQ,CAAEO,KAAxB,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,QAAQ,CAAEQ,IAAjB,CADF,CAFF,EAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBR,QAAQ,CAAES,WAA7B,CALF,CANF,EAaE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,MAAM,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEf,IADN;AACY,IAAA,EAAE,oBAAaM,QAAQ,CAACK,EAAtB,CADd;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMP,OAAO,CAACY,IAAR,CAAa,aAAb,CADjB;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,OAAO,EAAC,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CAbF,CADF;AAiCD,CAnDD;;AAqDA,eAAejB,QAAQ,CAACG,eAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { Card, Image, Button } from \"semantic-ui-react\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, RouteComponentProps } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {\r\n    activity,\r\n    openEditForm,\r\n    loadActivity,\r\n    loadingInitial\r\n  } = activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id);\r\n  }, [loadActivity, match.params.id]);\r\n\r\n  if(loadingInitial || !activity) return <LoadingComponent content='Loading activity...'/>\r\n\r\n  return (\r\n    <Card fluid>\r\n      <Image\r\n        src={`/assets/categoryImages/${activity!.category}.jpg`}\r\n        wrapped\r\n        ui={false}\r\n      />\r\n      <Card.Content>\r\n        <Card.Header>{activity!.title}</Card.Header>\r\n        <Card.Meta>\r\n          <span>{activity!.date}</span>\r\n        </Card.Meta>\r\n        <Card.Description>{activity!.description}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button.Group widths={2}>\r\n          {/* width of 2 to represent there are 2 buttons */}\r\n          <Button\r\n            as={Link} to={`/manage/${activity.id}`}\r\n            basic\r\n            color=\"blue\"\r\n            content=\"Edit\"\r\n          />\r\n          <Button\r\n            onClick={() => history.push('/activities')}\r\n            basic\r\n            color=\"grey\"\r\n            content=\"Cancel\"\r\n          />\r\n        </Button.Group>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n"]},"metadata":{},"sourceType":"module"}