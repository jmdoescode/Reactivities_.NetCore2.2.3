{"ast":null,"code":"import _initializerDefineProperty from \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _temp;\n\nimport { observable, action, computed } from 'mobx';\nimport { createContext } from 'react';\nimport agent from '../api/agent';\nlet ActivityStore = (_class = (_temp = class ActivityStore {\n  constructor() {\n    _initializerDefineProperty(this, \"activityRegistry\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"activities\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"selectedActivity\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"loadingInitial\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"editMode\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"submitting\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"loadActivities\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"createActivity\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"openCreateForm\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"selectActivity\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"editActivity\", _descriptor11, this);\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a, b) => Date.parse(a.date) - Date.parse(b.date));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"activityRegistry\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return new Map();\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"activities\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"selectedActivity\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"loadingInitial\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"editMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"submitting\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"activitiesByDate\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"activitiesByDate\"), _class.prototype), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"loadActivities\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.loadingInitial = true;\n\n      try {\n        const activities = await agent.Activities.list();\n        activities.forEach(activity => {\n          activity.date = activity.date.split('.')[0];\n          this.activityRegistry.set(activity.id, activity);\n        });\n        this.loadingInitial = false;\n      } catch (error) {\n        console.log(error);\n        this.loadingInitial = false; //7.084 - in the catch as well so that if we have a problem it'll stay in loading\n      }\n    };\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"createActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async activity => {\n      this.submitting = true;\n\n      try {\n        await agent.Activities.create(activity);\n        this.activityRegistry.set(activity.id, activity);\n        this.editMode = false;\n        this.submitting = false;\n      } catch (error) {\n        this.submitting = false;\n        console.log(error);\n      }\n    };\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"openCreateForm\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      this.editMode = true;\n      this.selectedActivity = undefined;\n    };\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"selectActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return id => {\n      this.selectedActivity = this.activityRegistry.get(id);\n      this.editMode = false;\n    };\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"editActivity\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async activity => {\n      this.submitting = true;\n\n      try {\n        await agent.Activities.update(activity);\n        this.activityRegistry.set(activity.id, activity);\n        this.selectedActivity = activity;\n        this.editMode = false;\n        this.submitting = false;\n      } catch (error) {\n        this.submitting = false;\n        console.log(error);\n      }\n    };\n  }\n})), _class);\nexport default createContext(new ActivityStore()); //7.081 - make sure to auto import from reactimport { IActivity } from './../models/activity';","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/app/stores/activityStore.ts"],"names":["observable","action","computed","createContext","agent","ActivityStore","activitiesByDate","Array","from","activityRegistry","values","sort","a","b","Date","parse","date","Map","loadingInitial","activities","Activities","list","forEach","activity","split","set","id","error","console","log","submitting","create","editMode","selectedActivity","undefined","get","update"],"mappings":"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","sourcesContent":["import { observable, action, computed } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport { IActivity } from '../models/activity';\r\nimport agent from '../api/agent';\r\n\r\nclass ActivityStore {\r\n    @observable activityRegistry = new Map();\r\n    @observable activities: IActivity[] = [];\r\n    @observable selectedActivity: IActivity | undefined;\r\n    @observable loadingInitial = false;\r\n    @observable editMode = false;\r\n    @observable submitting = false;\r\n\r\n    @computed get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort(\r\n            (a, b) => Date.parse(a.date) - Date.parse(b.date)\r\n        );\r\n    }\r\n\r\n    @action loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n\r\n        try{\r\n            const activities = await agent.Activities.list();\r\n            activities.forEach((activity) => {\r\n                activity.date = activity.date.split('.')[0];\r\n                this.activityRegistry.set(activity.id, activity);\r\n            });\r\n            this.loadingInitial = false\r\n        } catch (error){\r\n            console.log(error);\r\n            this.loadingInitial = false //7.084 - in the catch as well so that if we have a problem it'll stay in loading\r\n        }\r\n    };\r\n\r\n    @action createActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try{\r\n            await agent.Activities.create(activity);\r\n            this.activityRegistry.set(activity.id, activity);\r\n            this.editMode = false;\r\n            this.submitting = false;\r\n        }catch(error){\r\n            this.submitting = false;\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    @action openCreateForm = () => {\r\n        this.editMode = true;\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    @action selectActivity = (id: string) => {\r\n        this.selectedActivity = this.activityRegistry.get(id);\r\n        this.editMode = false;\r\n    }\r\n\r\n    @action editActivity = async (activity: IActivity) => {\r\n        this.submitting = true;\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            this.activityRegistry.set(activity.id, activity);\r\n            this.selectedActivity = activity;\r\n            this.editMode = false;\r\n            this.submitting = false;\r\n        } catch (error) {\r\n            this.submitting = false;\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport default createContext(new ActivityStore()) //7.081 - make sure to auto import from reactimport { IActivity } from './../models/activity';\r\n"]},"metadata":{},"sourceType":"module"}