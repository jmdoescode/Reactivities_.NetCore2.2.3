{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityList.tsx\";\nimport React, { useContext } from \"react\";\nimport { Item, Segment } from \"semantic-ui-react\";\nimport { observer } from 'mobx-react-lite';\nimport ActivityStore from '../../../app/stores/activityStore';\nimport ActivityListItem from './ActivityListItem';\n\nconst ActivityList = () => {\n  const activityStore = useContext(ActivityStore);\n  const activitiesByDate = activityStore.activitiesByDate,\n        deleteActivity = activityStore.deleteActivity,\n        submitting = activityStore.submitting,\n        target = activityStore.target;\n  return React.createElement(Segment, {\n    clearing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    divided: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, activitiesByDate.map(activity => React.createElement(ActivityListItem, {\n    key: activity.id,\n    activity: activity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))));\n};\n\nexport default observer(ActivityList);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/dashboard/ActivityList.tsx"],"names":["React","useContext","Item","Segment","observer","ActivityStore","ActivityListItem","ActivityList","activityStore","activitiesByDate","deleteActivity","submitting","target","map","activity","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,YAAsB,GAAG,MAAM;AACnC,QAAMC,aAAa,GAAGP,UAAU,CAACI,aAAD,CAAhC;AADmC,QAE5BI,gBAF4B,GAE4BD,aAF5B,CAE5BC,gBAF4B;AAAA,QAEVC,cAFU,GAE4BF,aAF5B,CAEVE,cAFU;AAAA,QAEMC,UAFN,GAE4BH,aAF5B,CAEMG,UAFN;AAAA,QAEkBC,MAFlB,GAE4BJ,aAF5B,CAEkBI,MAFlB;AAInC,SACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,gBAAgB,CAACI,GAAjB,CAAqBC,QAAQ,IAC5B,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAhC;AAAoC,IAAA,QAAQ,EAAED,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AASD,CAbD;;AAeA,eAAeV,QAAQ,CAACG,YAAD,CAAvB","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Item, Button, Label, Segment } from \"semantic-ui-react\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityStore from '../../../app/stores/activityStore'\r\nimport { Link } from \"react-router-dom\";\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {activitiesByDate, deleteActivity, submitting, target} = activityStore;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Item.Group divided>\r\n        {activitiesByDate.map(activity => (\r\n          <ActivityListItem key={activity.id} activity={activity} />\r\n        ))}\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n"]},"metadata":{},"sourceType":"module"}