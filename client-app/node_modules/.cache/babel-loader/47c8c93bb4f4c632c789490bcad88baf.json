{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\details\\\\ActivityDetails.tsx\";\nimport React from \"react\";\nimport { Card, Image, Button } from 'semantic-ui-react';\n\nconst ActivityDetails = ({\n  activity,\n  setEditMode\n}) => {\n  return React.createElement(Card, {\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"/assets/categoryImages/\".concat(activity.category, \".jpg\"),\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, activity.title), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, activity.date)), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, activity.description)), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Button.Group, {\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" \", React.createElement(Button, {\n    basic: true,\n    color: \"blue\",\n    content: \"Edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Button, {\n    basic: true,\n    color: \"grey\",\n    content: \"Cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))));\n};\n\nexport default ActivityDetails;","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/details/ActivityDetails.tsx"],"names":["React","Card","Image","Button","ActivityDetails","activity","setEditMode","category","title","date","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAA4BC,MAA5B,QAA0C,mBAA1C;;AAQA,MAAMC,eAAiC,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AACrE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,GAAG,mCAA4BD,QAAQ,CAACE,QAArC,SAAV;AAA+D,IAAA,OAAO,MAAtE;AAAuE,IAAA,EAAE,EAAE,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcF,QAAQ,CAACG,KAAvB,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,QAAQ,CAACI,IAAhB,CADF,CAFF,EAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACK,WADZ,CALF,CAFF,EAWE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,MAAM,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,IAAA,OAAO,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,KAAK,EAAC,MAApB;AAA2B,IAAA,OAAO,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,CAXF,CADF;AAoBD,CArBD;;AAuBA,eAAeN,eAAf","sourcesContent":["import React from \"react\";\r\nimport { Card, Image, Icon, Button } from 'semantic-ui-react'\r\nimport { IActivity } from './../../../app/models/activity';\r\n\r\ninterface IProps {\r\n  activity: IActivity;\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nconst ActivityDetails: React.FC<IProps> = ({activity, setEditMode}) => {\r\n  return (\r\n    <Card fluid>\r\n      <Image src={`/assets/categoryImages/${activity.category}.jpg`} wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header>{activity.title}</Card.Header>\r\n        <Card.Meta>\r\n          <span>{activity.date}</span>\r\n        </Card.Meta>\r\n        <Card.Description>\r\n          {activity.description}\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button.Group widths={2}> {/* width of 2 to represent there are 2 buttons */}\r\n            <Button basic color='blue' content='Edit' />\r\n            <Button basic color='grey' content='Cancel' />\r\n        </Button.Group>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ActivityDetails;\r\n"]},"metadata":{},"sourceType":"module"}