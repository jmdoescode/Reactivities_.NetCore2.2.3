{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityDashboard.tsx\";\nimport React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityDetails from \"./../details/ActivityDetails\";\nimport ActivityForm from \"./../form/ActivityForm\";\nimport { observer } from 'mobx-react-lite';\n\nconst ActivityDashboard = ({\n  activities,\n  selectActivity,\n  selectedActivity,\n  editMode,\n  setEditMode,\n  setSelectedActivity,\n  createActivity,\n  editActivity,\n  deleteActivity,\n  submitting,\n  target\n}) => {\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ActivityList, {\n    activities: activities,\n    selectActivity: selectActivity,\n    deleteActivity: deleteActivity,\n    submitting: submitting,\n    target: target,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, selectedActivity && !editMode && React.createElement(ActivityDetails, {\n    activity: selectedActivity,\n    setEditMode: setEditMode,\n    setSelectedActivity: setSelectedActivity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), editMode && React.createElement(ActivityForm, {\n    key: selectedActivity && selectedActivity.id || 0 //5.067 - bc it will cause component to reinitialize when you click Edit & createActivity\n    ,\n    setEditMode: setEditMode,\n    activity: selectedActivity,\n    createActivity: createActivity,\n    editActivity: editActivity,\n    submitting: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \" \"));\n};\n\nexport default observer(ActivityDashboard);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/dashboard/ActivityDashboard.tsx"],"names":["React","Grid","ActivityList","ActivityDetails","ActivityForm","observer","ActivityDashboard","activities","selectActivity","selectedActivity","editMode","setEditMode","setSelectedActivity","createActivity","editActivity","deleteActivity","submitting","target","id"],"mappings":";AAAA,OAAOA,KAAP,MAAsC,OAAtC;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAgBA,MAAMC,iBAAmC,GAAG,CAAC;AAC3CC,EAAAA,UAD2C;AAE3CC,EAAAA,cAF2C;AAG3CC,EAAAA,gBAH2C;AAI3CC,EAAAA,QAJ2C;AAK3CC,EAAAA,WAL2C;AAM3CC,EAAAA,mBAN2C;AAO3CC,EAAAA,cAP2C;AAQ3CC,EAAAA,YAR2C;AAS3CC,EAAAA,cAT2C;AAU3CC,EAAAA,UAV2C;AAW3CC,EAAAA;AAX2C,CAAD,KAYtC;AACJ,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAEV,UADd;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,cAAc,EAAEO,cAHlB;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,MAAM,EAAEC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGR,gBAAgB,IAAI,CAACC,QAArB,IACC,oBAAC,eAAD;AACE,IAAA,QAAQ,EAAED,gBADZ;AAEE,IAAA,WAAW,EAAEE,WAFf;AAGE,IAAA,mBAAmB,EAAEC,mBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EASGF,QAAQ,IACP,oBAAC,YAAD;AACE,IAAA,GAAG,EAAGD,gBAAgB,IAAIA,gBAAgB,CAACS,EAAtC,IAA6C,CADpD,CACuD;AADvD;AAEE,IAAA,WAAW,EAAEP,WAFf;AAGE,IAAA,QAAQ,EAAEF,gBAHZ;AAIE,IAAA,cAAc,EAAEI,cAJlB;AAKE,IAAA,YAAY,EAAEC,YALhB;AAME,IAAA,UAAU,EAAEE,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAkBK,GAlBL,CAVF,CADF;AAkCD,CA/CD;;AAiDA,eAAeX,QAAQ,CAACC,iBAAD,CAAvB","sourcesContent":["import React, { SyntheticEvent } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityDetails from \"./../details/ActivityDetails\";\r\nimport ActivityForm from \"./../form/ActivityForm\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface IProps {\r\n  activities: IActivity[];\r\n  selectActivity: (id: string) => void;\r\n  selectedActivity: IActivity | null;\r\n  editMode: boolean;\r\n  setEditMode: (editMode: boolean) => void;\r\n  setSelectedActivity: (activity: IActivity | null) => void;\r\n  createActivity: (activity: IActivity) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n  deleteActivity: (e: SyntheticEvent<HTMLButtonElement>, id: string) => void;\r\n  submitting: boolean;\r\n  target: string;\r\n}\r\n\r\nconst ActivityDashboard: React.FC<IProps> = ({\r\n  activities,\r\n  selectActivity,\r\n  selectedActivity,\r\n  editMode,\r\n  setEditMode,\r\n  setSelectedActivity,\r\n  createActivity,\r\n  editActivity,\r\n  deleteActivity,\r\n  submitting,\r\n  target\r\n}) => {\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityList\r\n          activities={activities}\r\n          selectActivity={selectActivity}\r\n          deleteActivity={deleteActivity}\r\n          submitting={submitting}\r\n          target={target}\r\n        ></ActivityList>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        {/* && - everything to the right only display if it is not null*/}\r\n        {selectedActivity && !editMode && (\r\n          <ActivityDetails\r\n            activity={selectedActivity}\r\n            setEditMode={setEditMode}\r\n            setSelectedActivity={setSelectedActivity}\r\n          />\r\n        )}\r\n        {editMode && (\r\n          <ActivityForm\r\n            key={(selectedActivity && selectedActivity.id) || 0} //5.067 - bc it will cause component to reinitialize when you click Edit & createActivity\r\n            setEditMode={setEditMode}\r\n            activity={selectedActivity!}\r\n            createActivity={createActivity}\r\n            editActivity={editActivity}\r\n            submitting={submitting}\r\n          />\r\n        )}{\" \"}\r\n        {/* 5.064 - add ! instead of union type null */}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n"]},"metadata":{},"sourceType":"module"}