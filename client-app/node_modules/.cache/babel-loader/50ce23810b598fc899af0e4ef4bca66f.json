{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityList.tsx\";\nimport React, { useContext } from \"react\";\nimport { Item, Button, Label, Segment } from \"semantic-ui-react\";\nimport { observer } from 'mobx-react-lite';\nimport ActivityStore from '../../../app/stores/activityStore';\nimport { Link } from \"react-router-dom\";\n\nconst ActivityList = () => {\n  const activityStore = useContext(ActivityStore);\n  const activitiesByDate = activityStore.activitiesByDate,\n        selectActivity = activityStore.selectActivity,\n        deleteActivity = activityStore.deleteActivity,\n        submitting = activityStore.submitting,\n        target = activityStore.target;\n  return React.createElement(Segment, {\n    clearing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    divided: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, activitiesByDate.map(activity => React.createElement(Item, {\n    key: activity.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Item.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Item.Header, {\n    as: \"a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, activity.title), React.createElement(Item.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, activity.date), React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, activity.description), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, activity.city, \", \", activity.venue)), React.createElement(Item.Extra, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Button, {\n    as: Link,\n    to: \"activities/\".concat(activity.id),\n    floated: \"right\",\n    content: \"View\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: activity.id,\n    loading: target === activity.id && submitting,\n    onClick: e => deleteActivity(e, activity.id),\n    floated: \"right\",\n    content: \"Delete\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Label, {\n    basic: true,\n    content: activity.category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))))));\n};\n\nexport default observer(ActivityList);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/dashboard/ActivityList.tsx"],"names":["React","useContext","Item","Button","Label","Segment","observer","ActivityStore","Link","ActivityList","activityStore","activitiesByDate","selectActivity","deleteActivity","submitting","target","map","activity","id","title","date","description","city","venue","e","category"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAsB,GAAG,MAAM;AACnC,QAAMC,aAAa,GAAGT,UAAU,CAACM,aAAD,CAAhC;AADmC,QAE5BI,gBAF4B,GAE4CD,aAF5C,CAE5BC,gBAF4B;AAAA,QAEVC,cAFU,GAE4CF,aAF5C,CAEVE,cAFU;AAAA,QAEMC,cAFN,GAE4CH,aAF5C,CAEMG,cAFN;AAAA,QAEsBC,UAFtB,GAE4CJ,aAF5C,CAEsBI,UAFtB;AAAA,QAEkCC,MAFlC,GAE4CL,aAF5C,CAEkCK,MAFlC;AAInC,SACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,gBAAgB,CAACK,GAAjB,CAAqBC,QAAQ,IAC5B,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,QAAQ,CAACE,KAA9B,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYF,QAAQ,CAACG,IAArB,CAFF,EAGE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,QAAQ,CAACI,WAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACK,IADZ,QACoBL,QAAQ,CAACM,KAD7B,CAFF,CAHF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEf,IADN;AACY,IAAA,EAAE,uBAAgBS,QAAQ,CAACC,EAAzB,CADd;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAED,QAAQ,CAACC,EADjB;AAEE,IAAA,OAAO,EAAEH,MAAM,KAAKE,QAAQ,CAACC,EAApB,IAA0BJ,UAFrC;AAGE,IAAA,OAAO,EAAGU,CAAD,IAAOX,cAAc,CAACW,CAAD,EAAIP,QAAQ,CAACC,EAAb,CAHhC;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,OAAO,EAAC,QALV;AAME,IAAA,KAAK,EAAC,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAeE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,OAAO,EAAED,QAAQ,CAACQ,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CATF,CADF,CADD,CADH,CADF,CADF;AAqCD,CAzCD;;AA2CA,eAAenB,QAAQ,CAACG,YAAD,CAAvB","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Item, Button, Label, Segment } from \"semantic-ui-react\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityStore from '../../../app/stores/activityStore'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {activitiesByDate, selectActivity, deleteActivity, submitting, target} = activityStore;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Item.Group divided>\r\n        {activitiesByDate.map(activity => (\r\n          <Item key={activity.id}>\r\n            <Item.Content>\r\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\r\n              <Item.Meta>{activity.date}</Item.Meta>\r\n              <Item.Description>\r\n                <div>{activity.description}</div>\r\n                <div>\r\n                  {activity.city}, {activity.venue}\r\n                </div>\r\n              </Item.Description>\r\n              <Item.Extra>\r\n                <Button\r\n                  as={Link} to={`activities/${activity.id}`}\r\n                  floated=\"right\"\r\n                  content=\"View\"\r\n                  color=\"blue\"\r\n                />\r\n                <Button\r\n                  name={activity.id}\r\n                  loading={target === activity.id && submitting}\r\n                  onClick={(e) => deleteActivity(e, activity.id)}\r\n                  floated=\"right\"\r\n                  content=\"Delete\"\r\n                  color=\"red\"\r\n                />\r\n                <Label basic content={activity.category} />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n"]},"metadata":{},"sourceType":"module"}