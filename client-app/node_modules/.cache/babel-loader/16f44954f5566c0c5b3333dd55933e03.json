{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityDashboard.tsx\";\nimport React, { useContext } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityDetails from \"./../details/ActivityDetails\";\nimport ActivityForm from \"./../form/ActivityForm\";\nimport { observer } from 'mobx-react-lite';\nimport ActivityStore from '../../../app/stores/activityStore';\n\nconst ActivityDashboard = ({\n  setEditMode,\n  setSelectedActivity,\n  editActivity,\n  deleteActivity,\n  submitting,\n  target\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const editMode = activityStore.editMode,\n        selectedActivity = activityStore.selectedActivity;\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ActivityList, {\n    activities: activityStore.activities,\n    selectActivity: activityStore.selectActivity,\n    deleteActivity: deleteActivity,\n    submitting: submitting,\n    target: target,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), \"test test\", React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, selectedActivity && !editMode && React.createElement(ActivityDetails, {\n    setEditMode: setEditMode,\n    setSelectedActivity: setSelectedActivity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), editMode && React.createElement(ActivityForm, {\n    key: selectedActivity && selectedActivity.id || 0 //5.067 - bc it will cause component to reinitialize when you click Edit & createActivity\n    ,\n    setEditMode: setEditMode,\n    activity: selectedActivity,\n    editActivity: editActivity,\n    submitting: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \" \"));\n};\n\nexport default observer(ActivityDashboard);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/dashboard/ActivityDashboard.tsx"],"names":["React","useContext","Grid","ActivityList","ActivityDetails","ActivityForm","observer","ActivityStore","ActivityDashboard","setEditMode","setSelectedActivity","editActivity","deleteActivity","submitting","target","activityStore","editMode","selectedActivity","activities","selectActivity","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgCC,UAAhC,QAAkD,OAAlD;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;AAWA,MAAMC,iBAAmC,GAAG,CAAC;AAC3CC,EAAAA,WAD2C;AAE3CC,EAAAA,mBAF2C;AAG3CC,EAAAA,YAH2C;AAI3CC,EAAAA,cAJ2C;AAK3CC,EAAAA,UAL2C;AAM3CC,EAAAA;AAN2C,CAAD,KAOtC;AACJ,QAAMC,aAAa,GAAGd,UAAU,CAACM,aAAD,CAAhC;AADI,QAEGS,QAFH,GAEiCD,aAFjC,CAEGC,QAFH;AAAA,QAEaC,gBAFb,GAEiCF,aAFjC,CAEaE,gBAFb;AAIJ,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AACE,IAAA,UAAU,EAAEF,aAAa,CAACG,UAD5B;AAEE,IAAA,cAAc,EAAEH,aAAa,CAACI,cAFhC;AAGE,IAAA,cAAc,EAAEP,cAHlB;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,MAAM,EAAEC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAWE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGG,gBAAgB,IAAI,CAACD,QAArB,IACC,oBAAC,eAAD;AACE,IAAA,WAAW,EAAEP,WADf;AAEE,IAAA,mBAAmB,EAAEC,mBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAQGM,QAAQ,IACP,oBAAC,YAAD;AACE,IAAA,GAAG,EAAGC,gBAAgB,IAAIA,gBAAgB,CAACG,EAAtC,IAA6C,CADpD,CACuD;AADvD;AAEE,IAAA,WAAW,EAAEX,WAFf;AAGE,IAAA,QAAQ,EAAEQ,gBAHZ;AAIE,IAAA,YAAY,EAAEN,YAJhB;AAKE,IAAA,UAAU,EAAEE,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAgBK,GAhBL,CAXF,CADF;AAiCD,CA5CD;;AA8CA,eAAeP,QAAQ,CAACE,iBAAD,CAAvB","sourcesContent":["import React, { SyntheticEvent, useContext } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityDetails from \"./../details/ActivityDetails\";\r\nimport ActivityForm from \"./../form/ActivityForm\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityStore from '../../../app/stores/activityStore'\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  setSelectedActivity: (activity: IActivity | null) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n  deleteActivity: (e: SyntheticEvent<HTMLButtonElement>, id: string) => void;\r\n  submitting: boolean;\r\n  target: string;\r\n}\r\n\r\nconst ActivityDashboard: React.FC<IProps> = ({\r\n  setEditMode,\r\n  setSelectedActivity,\r\n  editActivity,\r\n  deleteActivity,\r\n  submitting,\r\n  target\r\n}) => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const {editMode, selectedActivity} = activityStore;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityList\r\n          activities={activityStore.activities}\r\n          selectActivity={activityStore.selectActivity}\r\n          deleteActivity={deleteActivity}\r\n          submitting={submitting}\r\n          target={target}\r\n        ></ActivityList>\r\n      </Grid.Column>\r\n      test test\r\n      <Grid.Column width={6}>\r\n        {/* && - everything to the right only display if it is not null*/}\r\n        {selectedActivity && !editMode && (\r\n          <ActivityDetails\r\n            setEditMode={setEditMode}\r\n            setSelectedActivity={setSelectedActivity}\r\n          />\r\n        )}\r\n        {editMode && (\r\n          <ActivityForm\r\n            key={(selectedActivity && selectedActivity.id) || 0} //5.067 - bc it will cause component to reinitialize when you click Edit & createActivity\r\n            setEditMode={setEditMode}\r\n            activity={selectedActivity!}\r\n            editActivity={editActivity}\r\n            submitting={submitting}\r\n          />\r\n        )}{\" \"}\r\n        {/* 5.064 - add ! instead of union type null */}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n"]},"metadata":{},"sourceType":"module"}