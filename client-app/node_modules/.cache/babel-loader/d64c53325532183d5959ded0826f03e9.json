{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityList.tsx\";\nimport React, { useContext, Fragment } from \"react\";\nimport { Item, Segment, Label } from \"semantic-ui-react\";\nimport { observer } from \"mobx-react-lite\";\nimport ActivityStore from \"../../../app/stores/activityStore\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nconst ActivityList = () => {\n  const activityStore = useContext(ActivityStore);\n  const activitiesByDate = activityStore.activitiesByDate;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, activitiesByDate.map(([group, activities]) => React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Label, {\n    size: \"large\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, group), React.createElement(Segment, {\n    clearing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    divided: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, activities.map(activity => React.createElement(ActivityListItem, {\n    key: activity.id,\n    activity: activity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })))))));\n};\n\nexport default observer(ActivityList);","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/features/activities/dashboard/ActivityList.tsx"],"names":["React","useContext","Fragment","Item","Segment","Label","observer","ActivityStore","ActivityListItem","ActivityList","activityStore","activitiesByDate","map","group","activities","activity","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,KAAxB,QAAqC,mBAArC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,YAAsB,GAAG,MAAM;AACnC,QAAMC,aAAa,GAAGT,UAAU,CAACM,aAAD,CAAhC;AADmC,QAE3BI,gBAF2B,GAEND,aAFM,CAE3BC,gBAF2B;AAInC,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,gBAAgB,CAACC,GAAjB,CAAqB,CAAC,CAACC,KAAD,EAAQC,UAAR,CAAD,KACpB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF,EAIE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,UAAU,CAACF,GAAX,CAAeG,QAAQ,IACtB,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAhC;AAAoC,IAAA,QAAQ,EAAED,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAJF,CADD,CADH,CADF;AAkBD,CAtBD;;AAwBA,eAAeT,QAAQ,CAACG,YAAD,CAAvB","sourcesContent":["import React, { useContext, Fragment } from \"react\";\r\nimport { Item, Segment, Label } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const { activitiesByDate } = activityStore;\r\n\r\n  return (\r\n    <Fragment>\r\n      {activitiesByDate.map(([group, activities]) => (\r\n        <Fragment>\r\n          <Label size=\"large\" color=\"blue\">\r\n            {group}\r\n          </Label>\r\n          <Segment clearing>\r\n            <Item.Group divided>\r\n              {activities.map(activity => (\r\n                <ActivityListItem key={activity.id} activity={activity} />\r\n              ))}\r\n            </Item.Group>\r\n          </Segment>\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n"]},"metadata":{},"sourceType":"module"}