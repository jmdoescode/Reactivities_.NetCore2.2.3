{"ast":null,"code":"import _slicedToArray from \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\OneDrive\\\\_SoftwareDev\\\\Udemy\\\\2019_.NetCore_React\\\\Projects\\\\Reactivities_.NetCore2.2.3\\\\client-app\\\\src\\\\app\\\\layout\\\\App.tsx\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport NavBar from \"./../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        activities = _useState2[0],\n        setActivities = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedActivity = _useState4[0],\n        setSelectedActivity = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        editMode = _useState6[0],\n        setEditMode = _useState6[1]; //smart enough to infer type by the initial value\n\n\n  const handleSelectActivity = id => {\n    setSelectedActivity(activities.filter(a => a.id === id)[0]);\n  };\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/activities\").then(response => {\n      setActivities(response.data);\n    });\n  }, []); //empty array ensures that useEffect will run 1 time only - every time this component renders the useEffect method will be called\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Container, {\n    style: {\n      marginTop: \"7em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ActivityDashboard, {\n    activities: activities,\n    selectActivity: handleSelectActivity //selectedActivity={selectedActivity!} //use exclamation mark defines it as an activity or null (overrides the type safety)\n    ,\n    selectedActivity: selectedActivity //better to define union type as null in ActivityDashboard\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/OneDrive/_SoftwareDev/Udemy/2019_.NetCore_React/Projects/Reactivities_.NetCore2.2.3/client-app/src/app/layout/App.tsx"],"names":["React","useState","useEffect","Fragment","Container","axios","NavBar","ActivityDashboard","App","activities","setActivities","selectedActivity","setSelectedActivity","editMode","setEditMode","handleSelectActivity","id","filter","a","get","then","response","data","marginTop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAA6BC,SAA7B,QAA8C,mBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,OAAOC,iBAAP,MAA8B,uDAA9B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACoBP,QAAQ,CAAc,EAAd,CAD5B;AAAA;AAAA,QACTQ,UADS;AAAA,QACGC,aADH;;AAAA,qBAEgCT,QAAQ,CAAmB,IAAnB,CAFxC;AAAA;AAAA,QAETU,gBAFS;AAAA,QAESC,mBAFT;;AAAA,qBAGgBX,QAAQ,CAAC,KAAD,CAHxB;AAAA;AAAA,QAGTY,QAHS;AAAA,QAGCC,WAHD,kBAGiC;;;AAEjD,QAAMC,oBAAoB,GAAIC,EAAD,IAAgB;AAC3CJ,IAAAA,mBAAmB,CAACH,UAAU,CAACQ,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACF,EAAF,KAASA,EAAhC,EAAoC,CAApC,CAAD,CAAnB;AACD,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFc,GADH,CACoB,sCADpB,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBX,MAAAA,aAAa,CAACW,QAAQ,CAACC,IAAV,CAAb;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT,CATgB,CAeR;;AAER,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,UAAU,EAAEd,UADd;AAEE,IAAA,cAAc,EAAEM,oBAFlB,CAGE;AAHF;AAIE,IAAA,gBAAgB,EAAEJ,gBAJpB,CAIsC;AAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAaD,CA9BD;;AAgCA,eAAeH,GAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Header, Icon, List, Container } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport NavBar from \"./../../features/nav/NavBar\";\r\nimport { IActivity } from \"./../models/activity\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\n\r\nconst App = () => {\r\n  const [activities, setActivities] = useState<IActivity[]>([]);\r\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(null);\r\n  const [editMode, setEditMode] = useState(false); //smart enough to infer type by the initial value\r\n\r\n  const handleSelectActivity = (id: string) => {\r\n    setSelectedActivity(activities.filter(a => a.id === id)[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<IActivity[]>(\"http://localhost:5000/api/activities\")\r\n      .then(response => {\r\n        setActivities(response.data);\r\n      });\r\n  }, []); //empty array ensures that useEffect will run 1 time only - every time this component renders the useEffect method will be called\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavBar />\r\n      <Container style={{ marginTop: \"7em\" }}>\r\n        <ActivityDashboard\r\n          activities={activities}\r\n          selectActivity={handleSelectActivity}\r\n          //selectedActivity={selectedActivity!} //use exclamation mark defines it as an activity or null (overrides the type safety)\r\n          selectedActivity={selectedActivity} //better to define union type as null in ActivityDashboard\r\n        />\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}